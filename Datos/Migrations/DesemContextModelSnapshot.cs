// <auto-generated />
using System;
using DesemApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Datos.Migrations
{
    [DbContext(typeof(DesemContext))]
    partial class DesemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.EntidadesNegocio.Comunicacion.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Tarea");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Tarea");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Finanzas.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CentroCosto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RubroId")
                        .HasColumnType("int");

                    b.Property<string>("TipoGasto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramaId");

                    b.HasIndex("RubroId");

                    b.ToTable("Gasto");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Finanzas.Rubro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rubro");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Programa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Programas");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Usuarios.Finanzas.Adelanto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CentroCosto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramaId");

                    b.ToTable("Adelanto");
                });

            modelBuilder.Entity("Domino.EntidadesNegocio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Comunicacion.Pedido", b =>
                {
                    b.HasBaseType("Dominio.EntidadesNegocio.Comunicacion.Tarea");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.HasIndex("ProgramaId");

                    b.HasDiscriminator().HasValue("Pedido");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Comunicacion.Tarea", b =>
                {
                    b.HasOne("Dominio.EntidadesNegocio.Comunicacion.Pedido", null)
                        .WithMany("Tareas")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Finanzas.Gasto", b =>
                {
                    b.HasOne("Dominio.EntidadesNegocio.Programa", "Programa")
                        .WithMany("Gastos")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.EntidadesNegocio.Finanzas.Rubro", "Rubro")
                        .WithMany()
                        .HasForeignKey("RubroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");

                    b.Navigation("Rubro");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Usuarios.Finanzas.Adelanto", b =>
                {
                    b.HasOne("Dominio.EntidadesNegocio.Programa", "Programa")
                        .WithMany("Adelantos")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Comunicacion.Pedido", b =>
                {
                    b.HasOne("Dominio.EntidadesNegocio.Programa", "Programa")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Programa", b =>
                {
                    b.Navigation("Adelantos");

                    b.Navigation("Gastos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Dominio.EntidadesNegocio.Comunicacion.Pedido", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
